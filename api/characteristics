#! /usr/bin/env nix-shell
#! nix-shell -i dash -I channel:nixos-23.05-small -p dash nix jq yq findutils ncurses
. ./prefs
. ./log/logging
. ./profiling
set -eu

logger_info 'Invoked api/characteristics'
logger_trace 'api/characteristics'

. ./util/cache_toml.sh

if [ "$REQUEST_METHOD" = "GET" ]; then
    logger_debug 'Request is a GET'
    . ./util/cgi_helpers.sh

    meta="${qs_meta:-0}"
    perms="${qs_perms:-0}"
    type="${qs_type:-0}"
    ev="${qs_ev:-0}"

    characteristics="$(echo "${qs_id}" |
                       tr ',' '\n' |
                       "./bin/rust-parallel-$(uname)" --jobs "${PROFILING:-32}" dash ./util/characteristics_get.sh "$meta" "$perms" "$type" "$ev")"
fi

if [ "$REQUEST_METHOD" = 'PUT' ]; then
    logger_debug 'Request is a PUT'
    characteristics="$(cat |\
                       jq -rc '.characteristics | .[] | [.aid, .iid, .value, .ev, .authData, .remote // false, .r // false] | @sh' |\
                       "./bin/rust-parallel-$(uname)" --jobs "${PROFILING:-32}" dash ./util/characteristics_put.sh)"
fi

has_errors="$(echo "$characteristics" | jq -r 'select(.status // 0 != 0) | .status')"
if [ "$has_errors" != "" ]; then
    logger_debug 'There were errors'
    content="$(echo "$characteristics" | jq -sc '{ characteristics: map(.status = (if .value then 0 else .status end)) }')"
    dash ./util/respond.sh 207 "$content"
elif [ "$REQUEST_METHOD" = 'GET' ]; then
    content="$(echo "$characteristics" | jq -sc '{ characteristics: . }')"
    dash ./util/respond.sh 200 "$content"
elif [ "$REQUEST_METHOD" = 'PUT' ]; then
    dash ./util/respond.sh 204
fi
