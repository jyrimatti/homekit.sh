#! /usr/bin/env nix-shell
#! nix-shell --pure --keep LOGGING_LEVEL --keep PROFILING -i dash -I channel:nixos-23.05-small -p dash nix jq yq yajsv parallel findutils ncurses
. ./logging
. ./profiling
set -eu

. ./config/caching

logger_info 'Invoked: api/accessories'
logger_trace 'api/accessories'

if [ "${HOMEKIT_SH_CACHE_ACCESSORIES:-false}" = "true" ] && [ -e "$HOMEKIT_SH_CACHE_DIR"/accessories.json ]; then
    dash ./util/respond.sh 200 "$(cat "$HOMEKIT_SH_CACHE_DIR"/accessories.json)"
    logger_debug "Accessories retrived from cache"
    exit 0
fi

. ./util/cache_toml.sh

accessories="$(find ./accessories -name '*.toml' |
               "./bin/rust-parallel-$(uname)" --jobs "${PROFILING:-32}" -s --shell-path dash "lambda() { aid=\$(dash ./util/aid.sh \$1); dash ./util/services_grouped_by_type.sh \$1 | ./bin/rust-parallel-$(uname) -r '.*' --jobs ${PROFILING:-32} dash ./util/generate_service.sh 1 \$aid \$(echo {)0} | jq -cs \"{ aid: \$aid, services: map({type, iid, characteristics}) }\"; }; lambda" |
               jq -cs '{accessories: map(.services |= map(del(.cmd, .polling, .typeName) | .characteristics |= map(del(.cmd, .polling, .typeName))))}')"

if [ "${HOMEKIT_SH_CACHE_ACCESSORIES:-false}" = "true" ]; then
    test -e "$HOMEKIT_SH_CACHE_DIR" || mkdir -p "$HOMEKIT_SH_CACHE_DIR"
    echo "$accessories" > "$HOMEKIT_SH_CACHE_DIR"/accessories.json
fi

dash ./util/respond.sh 200 "$accessories"
